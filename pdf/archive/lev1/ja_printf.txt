必須部分

プログラム名: libftprintf.a
提出ファイル: Makefile、.h、/.h、.c、/.c
Makefileルール: NAME、all、clean、fclean、re
使用可能な外部関数: malloc、free、write、va_start、va_arg、va_copy、va_end
Libftの使用: 許可されている

ft_printf() 関数を含むライブラリを作成します。この関数はオリジナルの printf() の機能を模倣します。

ft_printf() のプロトタイプは以下のとおりです:
    int ft_printf(const char *, ...);

要件

・オリジナルの printf() のバッファ管理を実装しないでください。
・以下の変換指定子に対応する必要があります: c、s、p、d、i、u、x、X、%
・関数はオリジナルの printf() と比較されます。
・ライブラリの作成には ar コマンドを使用してください。libtool コマンドの使用は禁止です。
・libftprintf.a はリポジトリのルートに作成する必要があります。

実装する変換指定子
%c: 1文字を出力します。
%s: 文字列を出力します（一般的なCの規約に従います）。
%p: void * ポインタを16進数形式で出力します。
%d: 10進数の数値を出力します。
%i: 10進数の整数を出力します。
%u: 符号なし10進数を出力します。
%x: 16進数（小文字）で数値を出力します。
%X: 16進数（大文字）で数値を出力します。
%%: パーセント記号を出力します。

ボーナスはすべて実装する必要はありません。
・次のフラグの任意の組み合わせに対応すること: '-0.' および全ての変換での最小幅指定
・次のすべてのフラグに対応すること: '# + '（スペースも含みます）
・ボーナス部分を実装する場合は、最初から追加機能の実装方法について計画を立ててください。これにより、安易な方法の落とし穴を避けられます。
